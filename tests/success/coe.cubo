/*
 * Copyright (c) 2019 Bruno Bentzen. All rights reserved.
 * Released under the Apache License 2.0 (see "License");
 * Author: Bruno Bentzen
 */
   
/* Coercion */
 
def coe_path {A : type 1} {C : A → type 1} {a b : A} (p : path A a b) (c : app C a)
⊢ app C b :=
coe i0 i1 (λ i, app C (p @ i)) c
 
def coe_path' {A : type 1} {C : A → type 1} {a b : A} (p : path A a b) (c : app C b)
⊢ app C a :=
coe i1 i0 (λ i, app C (p @ i)) c
 
def coe_boundary {C : I → type 1} (i : I) (c : app C i) 
⊢ path (app C i) (coe i i C c) c :=
<_> c
 
def coe_regularity {A : type 1} (i j : I) (a : A) 
⊢ path A (coe i j (λ _, A) a) a :=
<_> a
